grf {
	grfid: "VB\05\05";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	url  : string(STR_GRF_WEBSITE);
	version: 3;
	min_compatible_version: 1;

	param 0 {
	param_terrain {
		type: int;
		name: string(STR_PARAM_TERRAIN);
		desc: string(STR_PARAM_TERRAIN_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_TERRAIN_OFF);
 				1: string(STR_PARAM_TERRAIN_ON);
				};
			}
		}
	
	param 1 {
	param_signals_semaphore {
		type: int;
		name: string(STR_PARAM_SIGNALS_SEMAPHORE);
		desc: string(STR_PARAM_SIGNALS_SEMAPHORE_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_SIGNALS_SEMAPHORE_OFF);
 				1: string(STR_PARAM_SIGNALS_SEMAPHORE_ON);
				};
			}
		}
	
	param 2 {
	param_signals_electric {
		type: int;
		name: string(STR_PARAM_SIGNALS_ELECTRIC);
		desc: string(STR_PARAM_SIGNALS_ELECTRIC_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_SIGNALS_ELECTRIC_OFF);
 				1: string(STR_PARAM_SIGNALS_ELECTRIC_ON);
				};
			}
		}
		
	param 3 {
	param_farms {
		type: int;
		name: string(STR_PARAM_FARMS);
		desc: string(STR_PARAM_FARMS_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_FARMS_OFF);
 				1: string(STR_PARAM_FARMS_ON);
				};
			}
		}
		
	param 4 {
	param_bridges {
		type: int;
		name: string(STR_PARAM_BRIDGES);
		desc: string(STR_PARAM_BRIDGES_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_BRIDGES_OFF);
 				1: string(STR_PARAM_BRIDGES_ON);
				};
			}
		}
	
	param 5 {
	param_trees {
		type: int;
		name: string(STR_PARAM_TREES);
		desc: string(STR_PARAM_TREES_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_TREES_OFF);
 				1: string(STR_PARAM_TREES_ON);
				};
			}
		}
		
	param 6 {
	param_roads {
		type: int;
		name: string(STR_PARAM_ROADS);
		desc: string(STR_PARAM_ROADS_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_ROADS_OFF);
 				1: string(STR_PARAM_ROADS_ON);
				};
			}
		}
		
	param 7 {
	param_road_crossings {
		type: int;
		name: string(STR_PARAM_ROAD_CROSSINGS);
		desc: string(STR_PARAM_ROAD_CROSSINGS_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_ROAD_CROSSINGS_OFF);
 				1: string(STR_PARAM_ROAD_CROSSINGS_ON);
				};
			}
		}
		
	param 8 {
	param_tracks {
		type: int;
		name: string(STR_PARAM_TRACKS);
		desc: string(STR_PARAM_TRACKS);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_TRACKS_OFF);
 				1: string(STR_PARAM_TRACKS_ON);
				};
			}
		}
	
	param 9 {
	param_snow {
		type: int;
		name: string(STR_PARAM_SNOW);
		desc: string(STR_PARAM_SNOW_DESC);
		min_value: 0;
		max_value: 2;
		def_value: 0;
			names: {
 				0: string(STR_PARAM_SNOW_AUTO);
 				1: string(STR_PARAM_SNOW_SNOW);
				2: string(STR_PARAM_SNOW_DESERT);
				};
			}
		}
	param 10 {
	param_foundations {
		type: int;
		name: string(STR_PARAM_FOUNDATIONS);
		desc: string(STR_PARAM_FOUNDATIONS_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 1;
			names: {
 				0: string(STR_PARAM_FOUNDATIONS_OFF);
 				1: string(STR_PARAM_FOUNDATIONS_ON);
				};
			}
		}
	param 11 {
	param_trains {
		type: int;
		name: string(STR_PARAM_TRAINS);
		desc: string(STR_PARAM_TRAINS_DESC);
		min_value: 0;
		max_value: 1;
		def_value: 0;
			names: {
 				0: string(STR_PARAM_TRAINS_OFF);
 				1: string(STR_PARAM_TRAINS_ON);
				};
			}
		}
    
    param 12 {
    param_grass_colour {
        type: int;
        name: string(STR_PARAM_GRASS_COLOUR);
        desc: string(STR_PARAM_GRASS_COLOUR_DESC);
        min_value: 0;
        max_value: 3;
        def_value: 0;
            names: {
                0: string(STR_PARAM_GRASS_COLOUR_AUTO);
                1: string(STR_PARAM_GRASS_COLOUR_TEMP);
                2: string(STR_PARAM_GRASS_COLOUR_ARCT);
                3: string(STR_PARAM_GRASS_COLOUR_TROP);
            };
        }
    }
}

//#include src-includes/templates.nml

//#include src-includes/gui.nml

if (param_terrain == 1) {
    //#include src-includes/terrain_temperate.nml
}

if (param_roads == 1) {
    //#include src-includes/roads.nml
}

if (param_road_crossings == 1) {
    //#include src-includes/road-crossings.nml
}

if (param_tracks == 1) {
    //#include src-includes/tracks.nml
}

//#include src-includes/track-stations.nml
//#include src-includes/track-depots.nml

if (param_signals_electric == 1) {
    //#include src-includes/signals-electric.nml
}

if (param_signals_semaphore == 1) {
    //#include src-includes/signals-semaphore.nml
}

if (param_farms == 1) {
    //#include src-includes/farmland.nml
}

if (param_bridges == 1) {
    //#include src-includes/bridges.nml
}

if (param_trees == 1) {
    //#include src-includes/trees.nml
}

if (param_foundations == 1) {
    //#include src-includes/foundations.nml
}

if (param_trains == 1) {
    //#include src-includes/trains.nml
}

//#include src-includes/houses.nml
